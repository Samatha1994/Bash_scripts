#!/bin/bash
#SBATCH --job-name=sam_my_job            # Set the job name
#SBATCH -o my_job_output_%j.txt      # Set the name of the job output file
#SBATCH --time=2:00:00               # Set the job time limit (2 hours here)
#SBATCH --mem=2G                     # Set the total job memory required (4 GB here)
#SBATCH --nodes=1                    # Set the number of nodes
#SBATCH --ntasks-per-node=1          # Set the number of tasks (cores) per node
#SBATCH --exclusive                      # Ensure that each job has exclusive access to a node
#SBATCH --array=0-63%64			# Set up a job array for 5 tasks and limit to 5 simultaneous jobs

module load Python/3.11.5-GCCcore-13.2.0
python --version


config_dir="/homes/samatha94/ExAI_inputs_and_outputs/Stage1_Results/config_files"

indices_file="/homes/samatha94/ExAI_inputs_and_outputs/Stage3_Results/indices.txt"

# Wait for the indices file to be generated by a previous step
while [ ! -f "${indices_file}" ]; do
    sleep 1
done
# Read the indices into an array
readarray -t indices < "${indices_file}"
# Get the index for this array job
neuron_index=${indices[$SLURM_ARRAY_TASK_ID]}
# Each job should clone into a unique directory
clone_dir="Stage3_${neuron_index}"
# Store your GitHub token in a secure location and load it here
export GITHUB_TOKEN=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
if [ ! -d "$clone_dir" ]; then
    git clone -b main https://$GITHUB_TOKEN@github.com/Samatha1994/Stage3.git "$clone_dir"
fi
# Change to the cloned directory for this job
cd "$clone_dir"
pip install --user virtualenv
#virtualenv --system-site-packages ~/virtualenvs/test
which virtualenv
echo $PATH
#source ~/virtualenvs/your_venv/bin/activate
source ~/virtualenvs/test/bin/activate
# Install required Python packages
pip install python-magic-bin
pip install python-magic
pip install pygoogle_image
pip install tensorflow Pillow pandas scikit-learn keras opencv-python requests
pip show pygoogle_image
pip show python-magic-bin
# Check if the neuron index is non-empty
if [ -n "$neuron_index" ]; then
    # If non-empty, run the Python script with this neuron index
    echo "Running stage3 program for neuron index ${neuron_index}"
    python main.py "$neuron_index"
else
    echo "No configuration file for array job ${SLURM_ARRAY_TASK_ID}."
fi
# Check if the neuron index is valid (i.e., it is contained in the indices.txt)
#if [[ " ${indices[*]} " == *" $neuron_index "* ]]; then
    # If valid, run the Python script with this neuron index
#    echo "Running stage3 program for neuron index ${neuron_index}"
#    python main.py "$neuron_index"
#else
    # If the index is not in the indices array, log and do not run the script
 #   echo "No configuration file for array job ${SLURM_ARRAY_TASK_ID}."
#fi



